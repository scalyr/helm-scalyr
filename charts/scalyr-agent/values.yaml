# controllerType -- Wether to setup a daemonset or a deployment for the Scalyr agent
# A daemonset should be used for Kubernetes monitoring while a deployment should be used for single resource
# monitorings (e.g. hosted databases, etc.)
# Valid values: "daemonset" or "deployment"
controllerType: "daemonset"

deployment:
  # deployment.replicaCount -- The count of replicas to use when using the deployment controller setup
  replicaCount: 1

# env -- Additional environment variables to set
extraEnvVars:
# extraEnvVars:
#   - name: FOO
#     valueFrom:
#       secretKeyRef:
#         key: FOO
#         name: secret-resource
#   - name: BAR
#     value: "foobar"

# volumes -- Additional volumes to mount
volumes: {}

# volumeMounts -- Additional volume mounts to set up
volumeMounts: {}

scalyr:
  # scalyr.server -- The Scalyr server to send logs to. Use eu.scalyr.com for EU
  server: "agent.scalyr.com"
  # scalyr.apiKey -- The Scalyr API key to use
  apiKey: ""
  # scalyr.debugLevel -- Set this to number between 1 and 5 (inclusive - 1 being least verbose and
  # 5 being most verbose) to enable additional debug logging into agent_debug.log file.
  # NOTE: If you want this debug log file to be ingested into Scalyr, you also need to set
  # scalyr.ingestDebugLog option to true.
  debugLevel: 0
  ingestDebugLog: false
  k8s:
    # scalyr.k8s.clusterName -- The kubernetes cluster name (when using the kubernetes monitoring)
    clusterName: ""
    # scalyr.k8s.verifyKubeletQueries -- Set this to false to disable TLS cert validation of queries to k8s kubelet.
    # By default cert validation is enabled and connection is verified using the CA configured via the service
    # account certificate (/run/secrets/kubernetes.io/serviceaccount/ca.crt file). If you want to use a custom CA
    # bundle, you can do that by setting scalyr.k8s.caCert config option to point to this file (this file needs to
    # be available inside the agent container). In some test environments such as minikube where self signed certs
    # are used you may want to set this to false.
    verifyKubeletQueries: true
    # scalyr.k8s.caCert -- The path to the CA certificate to use to verify TLS-connection to the kubelet
    caCert: ""
    # scalyr.k8s.enableLogs -- Enable fetching Pod/Container logs from Kubernetes
    enableLogs: true
    # scalyr.k8s.enableMetrics -- Enable fetching Kubernetes metrics. This requires scalyr.k8s.enableLogs to be true
    enableMetrics: true
    # scalyr.k8s.enableEvents -- Enable fetching Kubernetes events
    enableEvents: true
    # scalyr.k8s.eventsIgnoreMaster -- Set to false to also allow Kubernetes Events monitor to run on master node.
    eventsIgnoreMaster: true
    # scalyr.k8s.enableExplorer -- Enable Kubernetes Explorer functionality (https://www.dataset.com/blog/introducing-dataset-kubernetes-explorer/).
    # This functionality may require additional setup, for more information, please refer to the
    # docs - https://app.scalyr.com/help/scalyr-agent-k8s-explorer
    # NOTE: Explorer functionality is only supported when using DaemonSet agent deployment model.
    enableExplorer: false
    # scalyr.k8s.installExplorerDependencies -- Set to true to install additional dependencies which
    # are needed for the complete Kubernetes Explorer experience. This includes node-exporter
    # DaemonSet and kube-state-metrics Deployment. Both of the components are installed into the
    # same namespace as the scalyr agent for easier cleanup. In production deployments, those two
    # components usually get installed into monitoring or kube-system namespace.
    # This functionality is only meant to be used on new clusters which don't already have those
    # components running (e.g. local minikube cluster).
    installExplorerDependencies: false
    # scalyr.k8s.explorerScrapeInterval -- Scrape internal (in seconds) for Kubernetes Explorer
    # functionality.
    explorerScrapeInterval: 60
    # scalyr.k8s.explorerScrapeInterval -- Sample internal (in seconds) for Kubernetes Explorer
    # functionality.
    explorerSampleInterval: 60
  # scalyr.config -- A hash of configuration files and their content as documented in the
  # [Scalyr agent configmap configuration documentation](https://app.scalyr.com/help/scalyr-agent-k8s#modify-config)
  config: {}
  # scalyr.base64Config -- As Helm is currently
  # [unable to correctly pass JSON strings](https://github.com/helm/helm/issues/5618), this can be set to true so
  # all values of scalyr.config are expected to be base64 encoded and will be decoded in the chart
  base64Config: true

image:
  # image.repository -- Image to use. Defaults to the official scalyr agent image
  repository: scalyr/scalyr-k8s-agent
  pullPolicy: IfNotPresent
  # image.tag -- Tag to use. Defaults to appVersion from the chart metadata
  tag: ""
  # image.type -- Which image distribution to use - "buster" for Debian Buster and "alpine" for Alpine Linux based image. Alpine Linux images are around 50% smaller in size than Debian buster based ones.
  type: "buster"

# imagePullSecrets -- Image pull secrets to use if the image is in a private repository
imagePullSecrets: []
# nameOverride -- Override the default name that helm calculates
nameOverride: ""
# fullnameOverride -- Override the default full name that helm calculates
fullnameOverride: ""

# podAnnotations -- optional pod annotations
podAnnotations: {}

# podSercurityContext -- optional pod security context entries
podSecurityContext: {}

# securityContext -- optional security context entries
securityContext: {}

livenessProbe:
  # livenessProbe.enabled -- set to false to disable default liveness probe which utilizes scalyr-agent-2 status -H command
  enabled: true
  # livenessProbe.timeoutSeconds -- timeout in seconds after which probe should be considered as failed if there is no response
  timeoutSeconds: 10

# resources -- Pod resources. Defaults to the values documented in the official
# [Installation guide](https://app.scalyr.com/help/install-agent-kubernetes)
resources:
  requests:
    cpu: "500m"
    memory: "500Mi"
  limits:
    cpu: "500m"
    memory: "500Mi"

# nodeSelector -- optional node selectors
nodeSelector: {}

# podLabels -- optional arbitrary pod metadata labels
podLabels: {}

# tolerations -- Pod tolerations. Defaults to the values documented in the official
# [Installation guide](https://app.scalyr.com/help/install-agent-kubernetes)
tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"

# affinity -- optional affinity rules
affinity: {}

# Values relevant to ServiceAccount
serviceAccount:
  # serviceAccount.annotations -- optional arbitrary service account annotations
  annotations: {}

# Use this value if the Scalyr API key is already stored in a Kubernetes secret that was created by an external secrets operator or similar.
existingSecretRef: ""
